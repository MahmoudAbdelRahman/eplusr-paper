
@misc{Adler2020,
  title = {Rgl: {{3D Visualization Using OpenGL}}},
  shorttitle = {Rgl},
  author = {Adler, Daniel and Murdoch, Duncan},
  year = {2020},
  month = feb,
  abstract = {Provides medium to high level functions for 3D interactive graphics, including functions modelled on base graphics (plot3d(), etc.) as well as functions for constructing representations of geometric objects (cube3d(), etc.). Output may be on screen using OpenGL, or to various standard 3D file formats including WebGL, PLY, OBJ, STL as well as 2D image formats, including PNG, Postscript, SVG, PGF.},
  copyright = {GPL-2 | GPL-3 [expanded from: GPL]},
  howpublished = {\url{https://CRAN.R-project.org/package=rgl}},
  keywords = {Graphics,Multivariate,SpatioTemporal}
}

@misc{BigLadderSoftware2020,
  title = {Modelkit/{{Params Framework}}},
  author = {{Big Ladder Software}},
  year = {2020},
  month = mar,
  howpublished = {\url{https://bigladdersoftware.com/projects/modelkit/}}
}

@article{Blischak2020,
  title = {{{CRAN Task View}}: {{Reproducible Research}}},
  shorttitle = {{{CRAN Task View}}},
  author = {Blischak, John and Hill, Alison},
  year = {2020},
  month = mar,
  abstract = {The goal of reproducible research is to tie specific instructions to data analysis and experimental data so that scholarship can be recreated, better understood and verified. Packages in R for this purpose can be split into groups for: literate programming, pipeline toolkits, package reproducibility, project workflows, code/data formatting tools, format convertors, and object caching.

The maintainers gratefully acknowledge Anna Krystalli , Max Kuhn , Will Landau , Ben Marwick , and Daniel N{\"u}st for their useful feedback and contributions.},
  keywords = {⛔ No DOI found}
}

@article{Chong2017,
  title = {Bayesian Calibration of Building Energy Models with Large Datasets},
  author = {Chong, Adrian and Lam, Khee Poh and Pozzi, Matteo and Yang, Junjing},
  year = {2017},
  month = nov,
  volume = {154},
  pages = {343--355},
  issn = {0378-7788},
  doi = {10/gcg4n6},
  abstract = {Bayesian calibration as proposed by Kennedy and O'Hagan [22] has been increasingly applied to building energy models due to its ability to account for the discrepancy between observed values and model predictions. However, its application has been limited to calibration using monthly aggregated data because it is computationally inefficient when the dataset is large. This study focuses on improvements to the current implementation of Bayesian calibration to building energy simulation. This is achieved by: (1) using information theory to select a representative subset of the entire dataset for the calibration, and (2) using a more effective Markov chain Monte Carlo (MCMC) algorithm, the No-U-Turn Sampler (NUTS), which is an extension of Hamiltonian Monte Carlo (HMC) to explore the posterior distribution. The calibrated model was assessed by evaluating both accuracy and convergence. Application of the proposed method is demonstrated using two cases studies: (1) a TRNSYS model of a water-cooled chiller in a mixed-use building in Singapore, and (2) an EnergyPlus model of the cooling system of an office building in Pennsylvania, U.S.A. In both case studies, convergence was achieved for all parameters of the posterior distribution, with Gelman\textendash{}Rubin statistics R\textasciicircum{} within 1{$\pm$}0.1. The coefficient of variation of the root mean squared error (CVRMSE) and normalized mean biased error (NMBE) were also within the thresholds set by ASHRAE Guideline 14 [1].},
  file = {C\:\\Users\\hongy\\Dropbox\\literatures\\attachments\\Chong et al. - 2017 - Bayesian calibration of building energy models wit.pdf;C\:\\Users\\hongy\\Zotero\\storage\\BBHAQ39A\\S0378778817318741.html},
  journal = {Energy and Buildings},
  keywords = {Bayesian calibration,Building simulation,Hamiltonian Monte Carlo,No-U-Turn Sampler,Uncertainty analysis}
}

@article{Crawley2001,
  title = {{{EnergyPlus}}: Creating a New-Generation Building Energy Simulation Program},
  shorttitle = {{{EnergyPlus}}},
  author = {Crawley, Drury B. and Lawrie, Linda K. and Winkelmann, Frederick C. and Buhl, W. F. and Huang, Y. Joe and Pedersen, Curtis O. and Strand, Richard K. and Liesen, Richard J. and Fisher, Daniel E. and Witte, Michael J. and Glazer, Jason},
  year = {2001},
  month = apr,
  volume = {33},
  pages = {319--331},
  issn = {0378-7788},
  doi = {10/fb2jvz},
  abstract = {Many of the popular building energy simulation programs around the world are reaching maturity \textemdash{} some use simulation methods (and even code) that originated in the 1960s. For more than two decades, the US government supported development of two hourly building energy simulation programs, BLAST and DOE-2. Designed in the days of mainframe computers, expanding their capabilities further has become difficult, time-consuming, and expensive. At the same time, the 30 years have seen significant advances in analysis and computational methods and power \textemdash{} providing an opportunity for significant improvement in these tools.

In 1996, a US federal agency began developing a new building energy simulation tool, EnergyPlus, building on development experience with two existing programs: DOE-2 and BLAST. EnergyPlus includes a number of innovative simulation features \textemdash{} such as variable time steps, user-configurable modular systems that are integrated with a heat and mass balance-based zone simulation \textemdash{} and input and output data structures tailored to facilitate third party module and interface development. Other planned simulation capabilities include multizone airflow, and electric power and solar thermal and photovoltaic simulation. Beta testing of EnergyPlus began in late 1999 and the first release is scheduled for early 2001.},
  file = {C\:\\Users\\hongy\\Zotero\\storage\\7T4G9F37\\S0378778800001146.html},
  journal = {Energy and Buildings},
  keywords = {Building performance,Energy performance,Heat balance,Mass balance,Modular simulation,Simulation},
  number = {4},
  series = {Special {{Issue}}: {{BUILDING SIMULATION}}'99}
}

@misc{Dowle2019,
  title = {Data.Table: {{Extension}} of 'Data.Frame'},
  shorttitle = {Data.Table},
  author = {Dowle, Matt and Srinivasan, Arun and Gorecki, Jan and Chirico, Michael and Stetsenko, Pasha and Short, Tom and Lianoglou, Steve and Antonyan, Eduard and Bonsch, Markus and Parsonage, Hugh and Ritchie, Scott and Ren, Kun and Tan, Xianying and Saporta, Rick and Seiskari, Otto and Dong, Xianghui and Lang, Michel and Iwasaki, Watal and Wenchel, Seth and Broman, Karl and Schmidt, Tobias and Arenburg, David and Smith, Ethan and Cocquemas, Francois and Gomez, Matthieu and Chataignon, Philippe and Groves, Declan and Possenriede, Daniel and Parages, Felipe and Toth, Denes and {Yaramaz-David}, Mus and Perumal, Ayappan and Sams, James and Morgan, Martin and Quinn, Michael and @javrucebo and {@marc-outins} and Storey, Roy and Saraswat, Manish and Jacob, Morgan and Schubmehl, Michael and Vaughan, Davis},
  year = {2019},
  month = dec,
  abstract = {Fast aggregation of large data (e.g. 100GB in RAM), fast ordered joins, fast add/modify/delete of columns by group using no copies at all, list columns, friendly and fast character-separated-value read/write. Offers a natural and flexible syntax, for faster development.},
  copyright = {MPL-2.0 | file LICENSE},
  howpublished = {\url{https://CRAN.R-project.org/package=data.table}},
  keywords = {Finance,HighPerformanceComputing,TimeSeries}
}

@techreport{Guglielmetti2011,
  title = {{{OpenStudio}}: {{An Open Source Integrated Analysis Platform}}; {{Preprint}}},
  shorttitle = {{{OpenStudio}}},
  author = {Guglielmetti, R. and Macumber, D. and Long, N.},
  year = {2011},
  month = dec,
  institution = {{National Renewable Energy Lab. (NREL), Golden, CO (United States)}},
  abstract = {The U.S. Department of Energy's Office of Scientific and Technical Information},
  file = {C\:\\Users\\hongy\\Dropbox\\literatures\\attachments\\Guglielmetti et al_2011_OpenStudio.pdf},
  language = {English},
  number = {NREL/CP-5500-51836}
}

@misc{Jia2019,
  title = {Interfacing {{EnergyPlus Using R}} -- {{Intro}} to 'eplusr' {{Package}}},
  author = {Jia, Hongyuan},
  year = {2019},
  month = may,
  address = {{SDE4, NUS}},
  abstract = {Interfacing EnergyPlus Using R -- Intro to 'eplusr' Package},
  howpublished = {\url{https://github.com/hongyuanjia/eplusrIntro}},
  keywords = {energyplus,eplusr,r},
  language = {en}
}

@misc{Jia2020,
  title = {Eplusr: {{A}} Toolkit for Using {{EnergyPlus}} in {{R}}},
  author = {Jia, Hongyuan},
  year = {2020},
  month = feb,
  abstract = {A rich toolkit of using the whole building simulation program 'EnergyPlus'({$<$}https://energyplus.net{$>$}), which enables programmatic navigation, modification of 'EnergyPlus' models and makes it less painful to do parametric simulations and analysis.},
  howpublished = {\url{https://CRAN.R-project.org/package=eplusr}}
}

@misc{Jia2020a,
  title = {Epluspar: {{Conduct}} Parametric Analysis on {{EnergyPlus}} Models in {{R}}},
  author = {Jia, Hongyuan and Chong, Adrian},
  year = {2020},
  month = mar,
  abstract = {A toolkit for conducting parametric analysis on 'EnergyPlus'({$<$}https://energyplus.net{$>$}) models in R, including sensitivity analysis using Morris method and Bayesian calibration using using 'Stan'({$<$}https://mc-stan.org{$>$})},
  howpublished = {\url{https://ideas-lab-nus.github.io/epluspar}}
}

@misc{Jia2020b,
  title = {Eplusr-Docker: {{Dockerfiles}} for Working with {{EnergyPlus}} and {{R}}},
  author = {Jia, Hongyuan},
  year = {2020},
  month = mar,
  howpublished = {\url{https://hub.docker.com/r/hongyuanjia/eplusr}}
}

@misc{Jia2020c,
  title = {Eplusr-Esim2020},
  author = {Jia, Hongyuan and Chong, Adrian},
  year = {2020},
  month = mar,
  abstract = {eplusr paper for eSim 2020},
  howpublished = {\url{https://github.com/ideas-lab-nus/eplusr-esim2020}},
  journal = {GitHub},
  language = {en}
}

@article{Merkel2014,
  title = {Docker: Lightweight {{Linux}} Containers for Consistent Development and Deployment},
  shorttitle = {Docker},
  author = {Merkel, Dirk},
  year = {2014},
  month = mar,
  volume = {2014},
  pages = {2:2},
  issn = {1075-3583},
  doi = {10.5555/2600239.2600241},
  abstract = {Docker promises the ability to package applications and their dependencies into lightweight containers that move easily between different distros, start up quickly and are isolated from each other.},
  journal = {Linux Journal},
  keywords = {⚠️ Invalid DOI},
  number = {239}
}

@article{Morris1991,
  title = {Factorial {{Sampling Plans}} for {{Preliminary Computational Experiments}}},
  author = {Morris, Max D.},
  year = {1991},
  month = may,
  volume = {33},
  pages = {161--174},
  issn = {0040-1706},
  doi = {10/gc3fwb},
  abstract = {A computational model is a representation of some physical or other system of interest, first expressed mathematically and then implemented in the form of a computer program; it may be viewed as a function of inputs that, when evaluated, produces outputs. Motivation for this article comes from computational models that are deterministic, complicated enough to make classical mathematical analysis impractical and that have a moderate-to-large number of inputs. The problem of designing computational experiments to determine which inputs have important effects on an output is considered. The proposed experimental plans are composed of individually randomized one-factor-at-a-time designs, and data analysis is based on the resulting random sample of observed elementary effects, those changes in an output due solely to changes in a particular input. Advantages of this approach include a lack of reliance on assumptions of relative sparsity of important inputs, monotonicity of outputs with respect to inputs, or adequacy of a low-order polynomial as an approximation to the computational model.},
  file = {C\:\\Users\\hongy\\Zotero\\storage\\FTIYP7NE\\Morris - 1991 - Factorial Sampling Plans for Preliminary Computati.pdf},
  journal = {Technometrics},
  keywords = {Computational model,Factor screening,Latin hypercube sampling,Sensitivity analysis},
  number = {2}
}

@article{Nust2020,
  title = {The {{Rockerverse}}: {{Packages}} and {{Applications}} for {{Containerization}} with {{R}}},
  shorttitle = {The {{Rockerverse}}},
  author = {N{\"u}st, Daniel and Eddelbuettel, Dirk and Bennett, Dom and Cannoodt, Robrecht and Clark, Dav and Daroczi, Gergely and Edmondson, Mark and Fay, Colin and Hughes, Ellis and Kjeldgaard, Lars and Lopp, Sean and Marwick, Ben and Nolis, Heather and Nolis, Jacqueline and Ooi, Hong and Ram, Karthik and Ross, Noam and Shepherd, Lori and S{\'o}lymos, P{\'e}ter and Swetnam, Tyson Lee and Turaga, Nitesh and Williams, Jason and Willis, Craig and Xiao, Nan and Van Petegem, Charlotte},
  year = {2020},
  month = mar,
  abstract = {The Rocker Project provides widely-used Docker images for R across different application scenarios. This articles surveys downstream projects building upon Rocker and presents the current state of R packages for managing Docker images and controlling containers. These use cases and the variety of applications demonstrate the power of Rocker specifically and containerisation in general. We identified common themes across this diversity: reproducible environments, scalability and efficiency, and portability across clouds.},
  archivePrefix = {arXiv},
  eprint = {2001.10641},
  eprinttype = {arxiv},
  file = {C\:\\Users\\hongy\\Dropbox\\literatures\\attachments\\Nüst et al_2020_The Rockerverse.pdf},
  journal = {arXiv:2001.10641 [cs]},
  keywords = {⛔ No DOI found,68N01,Computer Science - Distributed; Parallel; and Cluster Computing,Computer Science - Software Engineering,D.2.6,D.2.7,K.6.3},
  primaryClass = {cs}
}

@misc{Philip2020,
  title = {Eppy: Scripting Language for {{E}}+, {{Energyplus}}},
  author = {Philip, Santosh},
  year = {2020},
  month = mar,
  howpublished = {\url{http://www.github.com/santoshphilip/eppy/}}
}

@misc{RCoreTeam2019,
  title = {R: {{A}} Language and Environment for Statistical Computing},
  author = {{R Core Team}},
  year = {2019},
  address = {{Vienna, Austria}},
  howpublished = {\url{https://www.R-project.org/}},
  organization = {{R Foundation for Statistical Computing}}
}

@article{Roth2018,
  title = {Scripting Frameworks for Enhancing Energyplus Modeling Productivity},
  author = {Roth, Amir and Bull, Jamie and Criswell, Scott and Ellis, Peter and Glazer, Jason and Goldwasser, David and Kruis, Neal and Parker, Andrew and Philip, Santosh and Reddy, David},
  year = {2018},
  pages = {8},
  abstract = {Task automation is a great productivity enhancer in any workflow. In building energy modeling, scripting has emerged as a powerful tool for automating both standard tasks such as generating a code-minimum baseline model from a model of a proposed or actual building and for workflow customization. This paper presents four scripting frameworks for EnergyPlus. Eppy makes EnergyPlus input objects accessible as Python objects, allowing them to be manipulated programmatically. Modelkit is an embedded Ruby library that allows modelers to create parameterized templates that instantiate different specific EnergyPlus input files depending on parameter values. OpenStudio Measures provide programmatic access to the OpenStudio object model; that model is translated into an EnergyPlus input file. CBECC uses a custom scripting/rule engine that operates on the Standards Data Dictionary (SDD) building model schema; OpenStudio is used to translate SDD files to EnergyPlus input files. The paper discusses the philosophy behind each system, its architecture and core capabilities, and uses simple modeling tasks to show how each system is used in practice.},
  file = {C\:\\Users\\hongy\\Dropbox\\literatures\\attachments\\Roth et al_2018_Scripting frameworks for enhancing energyplus modeling productivity.pdf},
  keywords = {⛔ No DOI found},
  language = {en}
}

@article{Wickham2014,
  title = {Tidy {{Data}}},
  author = {Wickham, Hadley},
  year = {2014},
  month = sep,
  volume = {59},
  pages = {1--23},
  issn = {1548-7660},
  doi = {10/gdm3p7},
  copyright = {Copyright (c) 2013 Hadley  Wickham},
  file = {C\:\\Users\\hongy\\Dropbox\\literatures\\attachments\\Wickham_2014_Tidy Data.pdf},
  journal = {Journal of Statistical Software},
  language = {en},
  number = {1}
}

@misc{Wickham2019,
  title = {Welcome to the {{Tidyverse}}},
  author = {Wickham, Hadley and Averick, Mara and Bryan, Jennifer and Chang, Winston and McGowan, Lucy and Fran{\c c}ois, Romain and Grolemund, Garrett and Hayes, Alex and Henry, Lionel and Hester, Jim and Kuhn, Max and Pedersen, Thomas Lin and Miller, Evan and Bache, Stephan Milton and M{\"u}ller, Kirill and Ooms, Jeroen and Robinson, David and Seidel, Dana Paige and Spinu, Vitalie and Takahashi, Kohske and Vaughan, Davis and Wilke, Claus and Woo, Kara and Yutani, Hiroaki},
  year = {2019},
  month = nov,
  howpublished = {\url{https://tidyverse.tidyverse.org/articles/paper.html}},
  language = {en}
}

@misc{Wikipedia2020,
  title = {Object-Oriented Programming},
  author = {{Wikipedia}},
  year = {2020},
  month = feb,
  abstract = {Object-oriented programming (OOP) is a programming paradigm based on the concept of "objects", which can contain data, in the form of fields (often known as attributes or properties), and code, in the form of procedures (often known as methods). A feature of objects is an object's procedures that can access and often modify the data fields of the object with which they are associated (objects have a notion of "this" or "self"). In OOP, computer programs are designed by making them out of objects that interact with one another. OOP languages are diverse, but the most popular ones are class-based, meaning that objects are instances of classes, which also determine their types.
Many of the most widely used programming languages (such as C++, Java, Python, etc.) are multi-paradigm and they support object-oriented programming to a greater or lesser degree, typically in combination with imperative, procedural programming. Significant object-oriented languages include
Java,
C++,
C\#,
Python,
PHP,
JavaScript,
Ruby,
Perl,
Object Pascal,
Objective-C,
Dart,
Swift,
Scala,
Common Lisp,
MATLAB,
and
Smalltalk.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  howpublished = {\url{https://en.wikipedia.org/w/index.php?title=Object-oriented_programming}},
  journal = {Wikipedia},
  language = {en}
}

@misc{Yi2020,
  title = {{{jEplus}}},
  author = {Yi, Zhang},
  year = {2020},
  month = mar,
  howpublished = {\url{http://www.jeplus.org/wiki/doku.php}}
}

@article{Yu2015,
  title = {Application of Multi-Objective Genetic Algorithm to Optimize Energy Efficiency and Thermal Comfort in Building Design},
  author = {Yu, Wei and Li, Baizhan and Jia, Hongyuan and Zhang, Ming and Wang, Di},
  year = {2015},
  month = feb,
  volume = {88},
  pages = {135--143},
  issn = {0378-7788},
  doi = {10/f63pfc},
  abstract = {Several conflicting criteria exist in building design optimization, especially energy consumption and indoor environment thermal performance. This paper presents a novel multi-objective optimization model that can assist designers in green building design. The Pareto solution was used to obtain a set of optimal solutions for building design optimization, and uses an improved multi-objective genetic algorithm (NSGA-II) as a theoretical basis for building design multi-objective optimization model. Based on the simulation data on energy consumption and indoor thermal comfort, the study also used a simulation-based improved back-propagation (BP) network which is optimized by a genetic algorithm (GA) to characterize building behavior, and then establishes a GA\textendash{}BP network model for rapidly predicting the energy consumption and indoor thermal comfort status of residential buildings; Third, the building design multi-objective optimization model was established by using the GA\textendash{}BP network as a fitness function of the multi-objective Genetic Algorithm (NSGA-II); Finally, a case study is presented with the aid of the multi-objective approach in which dozens of potential designs are revealed for a typical building design in China, with a wide range of trade-offs between thermal comfort and energy consumption.},
  journal = {Energy and Buildings},
  keywords = {Artificial neural network,Building design,Energy consumption,Multi-objective genetic algorithm,Thermal comfort},
  language = {en}
}


